defmodule Aoc.Y2021.Day18Test do
  use ExUnit.Case

  alias Aoc.Y2021.D18

  @input """
  [[[0,[5,8]],[[1,7],[9,6]]],[[4,[1,2]],[[1,4],2]]]
  [[[5,[2,8]],4],[5,[[9,9],0]]]
  [6,[[[6,2],[5,6]],[[7,6],[4,7]]]]
  [[[6,[0,7]],[0,9]],[4,[9,[9,0]]]]
  [[[7,[6,4]],[3,[1,3]]],[[[5,5],1],9]]
  [[6,[[7,3],[3,2]]],[[[3,8],[5,7]],4]]
  [[[[5,4],[7,7]],8],[[8,3],8]]
  [[9,3],[[9,9],[6,[4,9]]]]
  [[2,[[7,7],7]],[[5,8],[[9,3],[0,2]]]]
  [[[[5,2],5],[8,[3,7]]],[[5,[7,5]],[4,4]]]
  """
  test "part1: The magnitude of the final sum" do
    assert D18.part1(@input) == 4140
  end

  test "part2: The largest magnitude of the sum of any two numbers" do
    assert D18.part2(@input) == 3993
  end

  test "add two snailfish numbers" do
    assert D18.add(
             [[[0, [4, 5]], [0, 0]], [[[4, 5], [2, 6]], [9, 5]]],
             [7, [[[3, 7], [4, 3]], [[6, 3], [8, 8]]]]
           ) == [[[[4, 0], [5, 4]], [[7, 7], [6, 0]]], [[8, [7, 7]], [[7, 9], [5, 0]]]]

    assert D18.add(
             [[[[4, 0], [5, 4]], [[7, 7], [6, 0]]], [[8, [7, 7]], [[7, 9], [5, 0]]]],
             [[2, [[0, 8], [3, 4]]], [[[6, 7], 1], [7, [1, 6]]]]
           ) == [[[[6, 7], [6, 7]], [[7, 7], [0, 7]]], [[[8, 7], [7, 7]], [[8, 8], [8, 0]]]]

    assert D18.add(
             [[[[6, 7], [6, 7]], [[7, 7], [0, 7]]], [[[8, 7], [7, 7]], [[8, 8], [8, 0]]]],
             [[[[2, 4], 7], [6, [0, 5]]], [[[6, 8], [2, 8]], [[2, 1], [4, 5]]]]
           ) == [[[[7, 0], [7, 7]], [[7, 7], [7, 8]]], [[[7, 7], [8, 8]], [[7, 7], [8, 7]]]]
  end

  test "calculate the magnitude" do
    assert D18.magnitude([[1, 2], [[3, 4], 5]]) == 143
    assert D18.magnitude([[[[0, 7], 4], [[7, 8], [6, 0]]], [8, 1]]) == 1384
    assert D18.magnitude([[[[1, 1], [2, 2]], [3, 3]], [4, 4]]) == 445
    assert D18.magnitude([[[[3, 0], [5, 3]], [4, 4]], [5, 5]]) == 791
    assert D18.magnitude([[[[5, 0], [7, 4]], [5, 5]], [6, 6]]) == 1137

    assert D18.magnitude([[[[8, 7], [7, 7]], [[8, 6], [7, 7]]], [[[0, 7], [6, 6]], [8, 7]]]) ==
             3488
  end
end
